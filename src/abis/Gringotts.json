{
  "contractName": "Gringotts",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_galleon",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "LogEthDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_accountAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_updatedBalance",
          "type": "uint256"
        }
      ],
      "name": "LogEthWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountToWithdrawInWei",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountToContractInGalleons",
          "type": "uint256"
        }
      ],
      "name": "transferGalleonsToContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "mintGalleonsToUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_galleon\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"LogEthDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updatedBalance\",\"type\":\"uint256\"}],\"name\":\"LogEthWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"mintGalleonsToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToContractInGalleons\",\"type\":\"uint256\"}],\"name\":\"transferGalleonsToContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToWithdrawInWei\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Dinah Johnson\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_galleon\":\"the ERC20 token this contract will use\"}},\"getEthBalance()\":{\"returns\":{\"_0\":\"returns uint\"}},\"getTimestamp()\":{\"returns\":{\"_0\":\"returns uint\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Circuit breaker pattern\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Circuit breaker pattern\"},\"withdraw(uint256)\":{\"params\":{\"_amountToWithdrawInWei\":\"amount user wishes to withdraw in wei\"}}},\"stateVariables\":{\"galleon\":{\"details\":\"refer to https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20\"}},\"title\":\"Gringotts Bank Dapp\",\"version\":1},\"userdoc\":{\"events\":{\"LogEthDeposit(address,uint256)\":{\"notice\":\"You have made a deposit in the Gringotts Bank\"},\"LogEthWithdrawal(address,uint256,uint256)\":{\"notice\":\"You have made a withdrawal from the Gringotts Bank\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"After the Galleon contract is deployed the address of the Galleon contract is  passed to the constructor of this bank contract so the bank can use ERC20 tokens\"},\"deposit()\":{\"notice\":\"You have made a deposit to your Gringotts Bank account\"},\"getEthBalance()\":{\"notice\":\"Get wei balance in user's account \"},\"getTimestamp()\":{\"notice\":\"Get timestamp for how long user has provided liquidity to bank  \"},\"mintGalleonsToUser(address)\":{\"notice\":\"Rewards liquidity providers with Galleon tokens if they hold a deposit in the bank\"},\"pause()\":{\"notice\":\"Pause the contract \"},\"transferGalleonsToContract(uint256)\":{\"notice\":\"Allows only the owner of the ERC20 contract Galleon.sol to approve this contract to spend Galleon tokens. \"},\"unpause()\":{\"notice\":\"Resume the contract for both reads and writes\"},\"withdraw(uint256)\":{\"notice\":\"You have made a withdrawal from your Gringotts Bank account\"}},\"notice\":\"You can use this contract for basic DeFi simulations of deposits, withdrawals, and rewarding liquidity providers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Gringotts.sol\":\"Gringotts\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/Gringotts.sol\":{\"keccak256\":\"0x9c9b3badfb656442f2c8883233cab725247e14b55874d5e1fea2823de5441404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1559e79471da6d66fa0444c3168610f8b4feeb943241578a0ac3100509bd05d2\",\"dweb:/ipfs/QmZEkw3jFLYb42u1v7yfnTPD3bGVjyn4cCdaN1eo8ZG2Zv\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620017933803806200179383398181016040528101906200003791906200019c565b620000576200004b620000b960201b60201c565b620000c160201b60201c565b60008060146101000a81548160ff02191690831515021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200022a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001968162000210565b92915050565b600060208284031215620001af57600080fd5b6000620001bf8482850162000185565b91505092915050565b6000620001d582620001f0565b9050919050565b6000620001e982620001c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200021b81620001dc565b81146200022757600080fd5b50565b611559806200023a6000396000f3fe6080604052600436106100a75760003560e01c8063715018a611610064578063715018a6146101895780638456cb59146101a05780638da5cb5b146101b7578063d0e30db0146101e2578063d22fe713146101ec578063f2fde38b14610215576100a7565b8063188ec356146100ac5780632e1a7d4d146100d757806333fb3095146100f35780633f4ba83a1461011c5780635c975abb1461013357806370ed0ada1461015e575b600080fd5b3480156100b857600080fd5b506100c161023e565b6040516100ce919061139f565b60405180910390f35b6100f160048036038101906100ec9190610f55565b610285565b005b3480156100ff57600080fd5b5061011a60048036038101906101159190610f03565b61046e565b005b34801561012857600080fd5b506101316106ed565b005b34801561013f57600080fd5b50610148610773565b60405161015591906112a4565b60405180910390f35b34801561016a57600080fd5b50610173610789565b604051610180919061139f565b60405180910390f35b34801561019557600080fd5b5061019e6107d0565b005b3480156101ac57600080fd5b506101b5610858565b005b3480156101c357600080fd5b506101cc6108de565b6040516101d991906111c9565b60405180910390f35b6101ea610907565b005b3480156101f857600080fd5b50610213600480360381019061020e9190610f55565b610a70565b005b34801561022157600080fd5b5061023c60048036038101906102379190610f03565b610ba7565b005b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff9061131f565b60405180910390fd5b600033905082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461035c9190611421565b925050819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156103ee573d6000803e3d6000fd5b507ff4f955d21a0544a9d57a4f90e222e4b169ac9fffb73ccde4f24f3f5b30af65443384600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516104619392919061126d565b60405180910390a1505050565b804262278d00600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104be9190611421565b106104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f5906112df565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161055b91906111c9565b60206040518083038186803b15801561057357600080fd5b505afa158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610f7e565b146105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e29061137f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83683635c9adc5dea000006040518363ffffffff1660e01b815260040161065192919061121b565b602060405180830381600087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a39190610f2c565b506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6106f5610c9f565b73ffffffffffffffffffffffffffffffffffffffff166107136108de565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107609061135f565b60405180910390fd5b610771610ca7565b565b60008060149054906101000a900460ff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6107d8610c9f565b73ffffffffffffffffffffffffffffffffffffffff166107f66108de565b73ffffffffffffffffffffffffffffffffffffffff161461084c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108439061135f565b60405180910390fd5b6108566000610d48565b565b610860610c9f565b73ffffffffffffffffffffffffffffffffffffffff1661087e6108de565b73ffffffffffffffffffffffffffffffffffffffff16146108d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cb9061135f565b60405180910390fd5b6108dc610e0c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561099557506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b156109df5742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2e91906113cb565b925050819055507f9568868fa21e796ac8cf51e680200fcf972c9276898b5cf97e83298bf617fc773334604051610a66929190611244565b60405180910390a1565b610a78610c9f565b73ffffffffffffffffffffffffffffffffffffffff16610a966108de565b73ffffffffffffffffffffffffffffffffffffffff1614610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae39061135f565b60405180910390fd5b6000339050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b8152600401610b50939291906111e4565b602060405180830381600087803b158015610b6a57600080fd5b505af1158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190610f2c565b505050565b610baf610c9f565b73ffffffffffffffffffffffffffffffffffffffff16610bcd6108de565b73ffffffffffffffffffffffffffffffffffffffff1614610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a9061135f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a906112ff565b60405180910390fd5b610c9c81610d48565b50565b600033905090565b610caf610773565b610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce5906112bf565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d31610c9f565b604051610d3e91906111c9565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e14610773565b15610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b9061133f565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e98610c9f565b604051610ea591906111c9565b60405180910390a1565b600081359050610ebe816114de565b92915050565b600081519050610ed3816114f5565b92915050565b600081359050610ee88161150c565b92915050565b600081519050610efd8161150c565b92915050565b600060208284031215610f1557600080fd5b6000610f2384828501610eaf565b91505092915050565b600060208284031215610f3e57600080fd5b6000610f4c84828501610ec4565b91505092915050565b600060208284031215610f6757600080fd5b6000610f7584828501610ed9565b91505092915050565b600060208284031215610f9057600080fd5b6000610f9e84828501610eee565b91505092915050565b610fb081611455565b82525050565b610fbf81611467565b82525050565b610fce8161149d565b82525050565b6000610fe16014836113ba565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000611021601d836113ba565b91507f4861736e27742068656c642066756e6473206c6f6e6720656e6f7567680000006000830152602082019050919050565b60006110616026836113ba565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110c76012836113ba565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b60006111076010836113ba565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006111476020836113ba565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006111876020836113ba565b91507f557365722068617320616c726561647920636c61696d656420726577617264736000830152602082019050919050565b6111c381611493565b82525050565b60006020820190506111de6000830184610fa7565b92915050565b60006060820190506111f96000830186610fa7565b6112066020830185610fa7565b61121360408301846111ba565b949350505050565b60006040820190506112306000830185610fa7565b61123d6020830184610fc5565b9392505050565b60006040820190506112596000830185610fa7565b61126660208301846111ba565b9392505050565b60006060820190506112826000830186610fa7565b61128f60208301856111ba565b61129c60408301846111ba565b949350505050565b60006020820190506112b96000830184610fb6565b92915050565b600060208201905081810360008301526112d881610fd4565b9050919050565b600060208201905081810360008301526112f881611014565b9050919050565b6000602082019050818103600083015261131881611054565b9050919050565b60006020820190508181036000830152611338816110ba565b9050919050565b60006020820190508181036000830152611358816110fa565b9050919050565b600060208201905081810360008301526113788161113a565b9050919050565b600060208201905081810360008301526113988161117a565b9050919050565b60006020820190506113b460008301846111ba565b92915050565b600082825260208201905092915050565b60006113d682611493565b91506113e183611493565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611416576114156114af565b5b828201905092915050565b600061142c82611493565b915061143783611493565b92508282101561144a576114496114af565b5b828203905092915050565b600061146082611473565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114a882611493565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6114e781611455565b81146114f257600080fd5b50565b6114fe81611467565b811461150957600080fd5b50565b61151581611493565b811461152057600080fd5b5056fea26469706673582212208f7fe3ec5d709509d850ba7b75fe43374788002ac18b1a3d3345363e9c105c7064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c8063715018a611610064578063715018a6146101895780638456cb59146101a05780638da5cb5b146101b7578063d0e30db0146101e2578063d22fe713146101ec578063f2fde38b14610215576100a7565b8063188ec356146100ac5780632e1a7d4d146100d757806333fb3095146100f35780633f4ba83a1461011c5780635c975abb1461013357806370ed0ada1461015e575b600080fd5b3480156100b857600080fd5b506100c161023e565b6040516100ce919061139f565b60405180910390f35b6100f160048036038101906100ec9190610f55565b610285565b005b3480156100ff57600080fd5b5061011a60048036038101906101159190610f03565b61046e565b005b34801561012857600080fd5b506101316106ed565b005b34801561013f57600080fd5b50610148610773565b60405161015591906112a4565b60405180910390f35b34801561016a57600080fd5b50610173610789565b604051610180919061139f565b60405180910390f35b34801561019557600080fd5b5061019e6107d0565b005b3480156101ac57600080fd5b506101b5610858565b005b3480156101c357600080fd5b506101cc6108de565b6040516101d991906111c9565b60405180910390f35b6101ea610907565b005b3480156101f857600080fd5b50610213600480360381019061020e9190610f55565b610a70565b005b34801561022157600080fd5b5061023c60048036038101906102379190610f03565b610ba7565b005b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b8080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff9061131f565b60405180910390fd5b600033905082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461035c9190611421565b925050819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156103ee573d6000803e3d6000fd5b507ff4f955d21a0544a9d57a4f90e222e4b169ac9fffb73ccde4f24f3f5b30af65443384600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516104619392919061126d565b60405180910390a1505050565b804262278d00600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104be9190611421565b106104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f5906112df565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161055b91906111c9565b60206040518083038186803b15801561057357600080fd5b505afa158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610f7e565b146105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e29061137f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83683635c9adc5dea000006040518363ffffffff1660e01b815260040161065192919061121b565b602060405180830381600087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a39190610f2c565b506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6106f5610c9f565b73ffffffffffffffffffffffffffffffffffffffff166107136108de565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107609061135f565b60405180910390fd5b610771610ca7565b565b60008060149054906101000a900460ff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6107d8610c9f565b73ffffffffffffffffffffffffffffffffffffffff166107f66108de565b73ffffffffffffffffffffffffffffffffffffffff161461084c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108439061135f565b60405180910390fd5b6108566000610d48565b565b610860610c9f565b73ffffffffffffffffffffffffffffffffffffffff1661087e6108de565b73ffffffffffffffffffffffffffffffffffffffff16146108d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cb9061135f565b60405180910390fd5b6108dc610e0c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414801561099557506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b156109df5742600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a2e91906113cb565b925050819055507f9568868fa21e796ac8cf51e680200fcf972c9276898b5cf97e83298bf617fc773334604051610a66929190611244565b60405180910390a1565b610a78610c9f565b73ffffffffffffffffffffffffffffffffffffffff16610a966108de565b73ffffffffffffffffffffffffffffffffffffffff1614610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae39061135f565b60405180910390fd5b6000339050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b8152600401610b50939291906111e4565b602060405180830381600087803b158015610b6a57600080fd5b505af1158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190610f2c565b505050565b610baf610c9f565b73ffffffffffffffffffffffffffffffffffffffff16610bcd6108de565b73ffffffffffffffffffffffffffffffffffffffff1614610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a9061135f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a906112ff565b60405180910390fd5b610c9c81610d48565b50565b600033905090565b610caf610773565b610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce5906112bf565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d31610c9f565b604051610d3e91906111c9565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e14610773565b15610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b9061133f565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e98610c9f565b604051610ea591906111c9565b60405180910390a1565b600081359050610ebe816114de565b92915050565b600081519050610ed3816114f5565b92915050565b600081359050610ee88161150c565b92915050565b600081519050610efd8161150c565b92915050565b600060208284031215610f1557600080fd5b6000610f2384828501610eaf565b91505092915050565b600060208284031215610f3e57600080fd5b6000610f4c84828501610ec4565b91505092915050565b600060208284031215610f6757600080fd5b6000610f7584828501610ed9565b91505092915050565b600060208284031215610f9057600080fd5b6000610f9e84828501610eee565b91505092915050565b610fb081611455565b82525050565b610fbf81611467565b82525050565b610fce8161149d565b82525050565b6000610fe16014836113ba565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000611021601d836113ba565b91507f4861736e27742068656c642066756e6473206c6f6e6720656e6f7567680000006000830152602082019050919050565b60006110616026836113ba565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110c76012836113ba565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b60006111076010836113ba565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006111476020836113ba565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006111876020836113ba565b91507f557365722068617320616c726561647920636c61696d656420726577617264736000830152602082019050919050565b6111c381611493565b82525050565b60006020820190506111de6000830184610fa7565b92915050565b60006060820190506111f96000830186610fa7565b6112066020830185610fa7565b61121360408301846111ba565b949350505050565b60006040820190506112306000830185610fa7565b61123d6020830184610fc5565b9392505050565b60006040820190506112596000830185610fa7565b61126660208301846111ba565b9392505050565b60006060820190506112826000830186610fa7565b61128f60208301856111ba565b61129c60408301846111ba565b949350505050565b60006020820190506112b96000830184610fb6565b92915050565b600060208201905081810360008301526112d881610fd4565b9050919050565b600060208201905081810360008301526112f881611014565b9050919050565b6000602082019050818103600083015261131881611054565b9050919050565b60006020820190508181036000830152611338816110ba565b9050919050565b60006020820190508181036000830152611358816110fa565b9050919050565b600060208201905081810360008301526113788161113a565b9050919050565b600060208201905081810360008301526113988161117a565b9050919050565b60006020820190506113b460008301846111ba565b92915050565b600082825260208201905092915050565b60006113d682611493565b91506113e183611493565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611416576114156114af565b5b828201905092915050565b600061142c82611493565b915061143783611493565b92508282101561144a576114496114af565b5b828203905092915050565b600061146082611473565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114a882611493565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6114e781611455565b81146114f257600080fd5b50565b6114fe81611467565b811461150957600080fd5b50565b61151581611493565b811461152057600080fd5b5056fea26469706673582212208f7fe3ec5d709509d850ba7b75fe43374788002ac18b1a3d3345363e9c105c7064736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1005:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:94:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "94:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "109:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "103:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "103:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "94:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "166:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$819",
                      "nodeType": "YulIdentifier",
                      "src": "125:40:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "125:47:8"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$819_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "62:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "70:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "78:5:8",
                "type": ""
              }
            ],
            "src": "7:171:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:221:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "321:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "330:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "333:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "323:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "323:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "296:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "305:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "292:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "292:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "288:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "285:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "347:142:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "362:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "376:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "366:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "391:88:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "451:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "462:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "447:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "447:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "471:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$819_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "401:45:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "401:78:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "391:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$819_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "245:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "256:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "268:6:8",
                "type": ""
              }
            ],
            "src": "184:312:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "547:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "557:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "586:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "568:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "557:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "529:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "539:7:8",
                "type": ""
              }
            ],
            "src": "502:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "663:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "673:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "702:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "684:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "673:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$819",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "645:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "655:7:8",
                "type": ""
              }
            ],
            "src": "604:110:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "765:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "775:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "790:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "797:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "786:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "775:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "747:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "757:7:8",
                "type": ""
              }
            ],
            "src": "720:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "909:93:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "980:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "992:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "982:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "982:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "982:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "932:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "971:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$819",
                              "nodeType": "YulIdentifier",
                              "src": "939:31:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "939:38:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "929:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:49:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "922:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:57:8"
                  },
                  "nodeType": "YulIf",
                  "src": "919:2:8"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$819",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "902:5:8",
                "type": ""
              }
            ],
            "src": "852:150:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_IERC20_$819_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$819(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$819_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$819_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$819(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_IERC20_$819(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$819(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11686:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:8",
                "type": ""
              }
            ],
            "src": "152:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:8",
                "type": ""
              }
            ],
            "src": "295:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "513:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "528:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "522:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "513:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "571:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "544:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "481:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "489:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "497:5:8",
                "type": ""
              }
            ],
            "src": "440:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "713:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "727:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "742:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "756:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "746:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "771:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "806:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "817:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "802:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "802:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "826:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "781:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "781:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "771:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "625:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "636:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "648:6:8",
                "type": ""
              }
            ],
            "src": "589:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "931:204:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "977:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "986:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "989:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "979:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "979:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "979:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "952:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "961:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "948:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "973:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "944:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "941:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1003:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1018:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1032:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1022:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1047:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1090:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1101:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1086:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1086:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1110:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1057:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1047:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:8",
                "type": ""
              }
            ],
            "src": "857:278:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1207:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1253:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1262:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1265:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1255:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1255:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1255:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1228:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1237:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1224:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1224:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1249:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1220:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1217:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1279:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1294:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1308:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1298:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1323:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1358:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1369:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1354:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1354:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1378:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1333:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1323:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1177:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1188:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1200:6:8",
                "type": ""
              }
            ],
            "src": "1141:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1486:207:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1532:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1541:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1544:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1534:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1534:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1534:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1507:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1516:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1503:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1503:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1528:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1496:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1558:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1573:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1577:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1602:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1648:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1659:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1644:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1668:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1612:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1612:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1602:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1456:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1467:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1479:6:8",
                "type": ""
              }
            ],
            "src": "1409:284:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1764:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1781:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1804:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1786:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1786:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1774:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1774:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1752:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1759:3:8",
                "type": ""
              }
            ],
            "src": "1699:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1882:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1899:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1919:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1904:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1904:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1892:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1892:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1892:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1870:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1877:3:8",
                "type": ""
              }
            ],
            "src": "1823:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2032:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2049:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2114:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1000000000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2054:59:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:66:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:79:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2042:79:8"
                }
              ]
            },
            "name": "abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2020:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2027:3:8",
                "type": ""
              }
            ],
            "src": "1938:189:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2279:172:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2289:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2355:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2360:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2296:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2289:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2384:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2389:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2380:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2380:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2393:22:8",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2373:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2373:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2373:43:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2426:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2437:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2442:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2433:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2426:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2267:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2275:3:8",
                "type": ""
              }
            ],
            "src": "2133:318:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2603:181:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2613:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2679:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2684:2:8",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2620:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2620:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2613:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2708:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2713:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2704:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2704:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2717:31:8",
                        "type": "",
                        "value": "Hasn't held funds long enough"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2697:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2697:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2759:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2770:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2775:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2766:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2766:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2759:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2591:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2599:3:8",
                "type": ""
              }
            ],
            "src": "2457:327:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2936:224:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2946:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3012:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3017:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2953:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2946:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3041:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3046:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3037:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3037:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3050:34:8",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3030:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3030:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3106:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3111:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3102:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3102:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3116:8:8",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3095:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3095:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3095:30:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3146:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3151:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3142:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3142:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3135:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2924:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2932:3:8",
                "type": ""
              }
            ],
            "src": "2790:370:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3312:170:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3322:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3388:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3393:2:8",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3329:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3329:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3322:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3417:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3422:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3413:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3413:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3426:20:8",
                        "type": "",
                        "value": "Insufficient funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3406:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3406:41:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3457:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3468:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3473:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3464:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3464:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3457:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3300:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3308:3:8",
                "type": ""
              }
            ],
            "src": "3166:316:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3634:168:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3644:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3710:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3715:2:8",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3651:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3651:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3644:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3739:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3744:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3735:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3748:18:8",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:39:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3728:39:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3777:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3788:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3793:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3784:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3777:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3622:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3630:3:8",
                "type": ""
              }
            ],
            "src": "3488:314:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3954:184:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3964:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4030:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4035:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3971:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3964:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4059:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4064:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4055:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4055:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4068:34:8",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4048:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4048:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4048:55:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4113:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4124:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4129:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4120:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4120:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4113:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3942:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3950:3:8",
                "type": ""
              }
            ],
            "src": "3808:330:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4290:184:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4300:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4366:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4371:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4307:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4307:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4300:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4395:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4400:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4391:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4391:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4404:34:8",
                        "type": "",
                        "value": "User has already claimed rewards"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4384:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4384:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4384:55:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4449:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4460:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4465:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4456:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4456:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4449:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4278:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4286:3:8",
                "type": ""
              }
            ],
            "src": "4144:330:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4545:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4562:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4585:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4567:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4567:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4555:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4555:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4555:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4533:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4540:3:8",
                "type": ""
              }
            ],
            "src": "4480:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4702:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4712:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4724:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4735:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4720:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4720:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4712:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4792:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4805:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4816:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4748:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4748:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4748:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4674:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4686:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4697:4:8",
                "type": ""
              }
            ],
            "src": "4604:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4996:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5008:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5019:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5004:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5004:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4996:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5076:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5089:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5100:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5085:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5085:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5032:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5032:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5032:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5157:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5170:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5181:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5166:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5166:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5113:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5113:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5239:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5252:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5263:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5248:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5248:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5195:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5195:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5195:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4942:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4954:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4962:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4970:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4981:4:8",
                "type": ""
              }
            ],
            "src": "4832:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5435:235:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5445:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5457:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5468:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5453:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5453:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5445:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5525:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5538:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5549:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5534:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5534:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5481:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5481:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5481:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5635:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5648:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5659:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5644:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5644:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5562:72:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5562:101:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5562:101:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_1000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5399:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5411:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5419:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5430:4:8",
                "type": ""
              }
            ],
            "src": "5280:390:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5802:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5812:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5824:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5835:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5820:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5820:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5812:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5892:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5905:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5916:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5901:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5901:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5848:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5848:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5848:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5973:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5986:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5997:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5982:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5982:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5929:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5929:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5929:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5766:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5778:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5786:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5797:4:8",
                "type": ""
              }
            ],
            "src": "5676:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6168:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6178:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6190:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6201:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6186:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6186:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6178:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6258:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6271:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6282:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6267:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6267:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6214:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6214:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6214:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6339:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6352:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6363:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6348:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6348:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6295:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6295:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6295:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6421:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6434:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6445:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6430:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6430:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6377:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6377:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6124:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6136:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6144:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6152:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6163:4:8",
                "type": ""
              }
            ],
            "src": "6014:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6554:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6564:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6576:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6587:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6572:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6572:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6564:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6638:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6651:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6662:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6647:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6647:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6600:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6600:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6600:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6526:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6538:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6549:4:8",
                "type": ""
              }
            ],
            "src": "6462:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6849:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6859:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6871:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6882:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6867:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6867:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6859:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6906:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6917:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6902:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6902:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6925:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6931:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6921:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6921:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6895:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6895:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6951:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7085:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6959:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6959:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6951:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6829:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6844:4:8",
                "type": ""
              }
            ],
            "src": "6678:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7274:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7284:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7296:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7307:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7292:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7292:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7284:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7331:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7342:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7327:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7327:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7350:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7356:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7346:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7346:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7320:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7320:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7320:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7376:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7510:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7384:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7384:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7376:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7254:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7269:4:8",
                "type": ""
              }
            ],
            "src": "7103:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7699:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7709:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7721:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7732:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7717:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7717:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7709:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7756:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7767:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7752:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7752:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7775:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7781:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7771:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7771:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7745:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7745:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7745:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7801:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7935:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7809:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7809:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7801:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7679:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7694:4:8",
                "type": ""
              }
            ],
            "src": "7528:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8124:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8134:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8146:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8157:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8142:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8142:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8134:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8181:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8192:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8177:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8177:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8200:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8206:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8196:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8196:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8170:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8170:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8170:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8226:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8360:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8234:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8234:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8226:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8104:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8119:4:8",
                "type": ""
              }
            ],
            "src": "7953:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8549:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8559:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8571:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8582:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8567:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8567:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8559:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8606:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8617:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8602:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8602:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8625:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8631:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8621:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8621:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8595:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8595:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8595:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8651:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8785:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8659:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8659:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8651:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8529:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8544:4:8",
                "type": ""
              }
            ],
            "src": "8378:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8974:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8984:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8996:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9007:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8992:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8992:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8984:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9031:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9042:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9027:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9027:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9050:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9056:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9046:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9046:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9020:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9020:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9020:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9076:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9210:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9084:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9084:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9076:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8954:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8969:4:8",
                "type": ""
              }
            ],
            "src": "8803:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9399:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9409:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9421:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9432:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9417:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9417:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9409:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9456:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9467:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9452:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9452:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9475:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9481:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9471:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9471:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9445:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9445:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9445:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9501:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9635:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9509:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9509:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9501:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9379:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9394:4:8",
                "type": ""
              }
            ],
            "src": "9228:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9751:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9761:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9773:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9784:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9769:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9769:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9761:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9841:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9854:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9865:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9850:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9850:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9797:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9797:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9723:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9735:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9746:4:8",
                "type": ""
              }
            ],
            "src": "9653:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9977:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9994:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9999:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9987:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9987:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9987:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10015:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10034:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10039:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10030:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10030:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10015:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9949:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9954:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9965:11:8",
                "type": ""
              }
            ],
            "src": "9881:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10100:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10110:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10133:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10115:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10115:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10110:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10144:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10167:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10149:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10149:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10144:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10307:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10309:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10309:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10309:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10228:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10235:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10303:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10231:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10231:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10225:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10225:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10222:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10339:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10350:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10353:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10346:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10346:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10339:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10087:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10090:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10096:3:8",
                "type": ""
              }
            ],
            "src": "10056:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10412:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10422:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10445:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10427:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10427:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10422:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10456:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10479:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10461:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10461:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10456:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10503:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10505:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10505:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10505:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10497:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10500:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10494:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10494:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10491:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10535:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10547:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10550:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10543:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10543:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10535:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10398:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10401:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10407:4:8",
                "type": ""
              }
            ],
            "src": "10367:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10609:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10619:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10648:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10630:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10630:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10619:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10591:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10601:7:8",
                "type": ""
              }
            ],
            "src": "10564:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10708:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10718:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10743:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10736:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10736:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10729:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10729:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10718:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10690:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10700:7:8",
                "type": ""
              }
            ],
            "src": "10666:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10807:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10817:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10832:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10839:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10828:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10828:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10817:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10789:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10799:7:8",
                "type": ""
              }
            ],
            "src": "10762:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10939:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10949:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10960:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10949:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10921:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10931:7:8",
                "type": ""
              }
            ],
            "src": "10894:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11076:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11107:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11089:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11089:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11076:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1000000000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11046:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11056:9:8",
                "type": ""
              }
            ],
            "src": "10977:142:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11153:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11170:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11173:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11163:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11163:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11163:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11267:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11270:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11260:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11260:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11260:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11291:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11294:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11284:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11284:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11284:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11125:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11354:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11411:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11420:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11423:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11413:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11413:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11413:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11377:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11402:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "11384:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11384:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11374:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11374:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11367:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11367:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11364:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11347:5:8",
                "type": ""
              }
            ],
            "src": "11311:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11479:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11533:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11542:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11545:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11535:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11535:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11535:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11502:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11524:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "11509:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11509:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11499:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11499:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11492:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11492:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11489:2:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11472:5:8",
                "type": ""
              }
            ],
            "src": "11439:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11604:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11661:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11670:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11673:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11663:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11663:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11663:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11627:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11652:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11634:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11634:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11624:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11624:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11617:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11617:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11614:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11597:5:8",
                "type": ""
              }
            ],
            "src": "11561:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"Pausable: not paused\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"Hasn't held funds long enough\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Insufficient funds\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n\n        mstore(add(pos, 0), \"Pausable: paused\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"User has already claimed rewards\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "420:5267:7:-:0;;;1216:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;934:5:1;924:7;;:15;;;;;;;;;;;;;;;;;;1262:8:7;1252:7;;:18;;;;;;;;;;;;;;;;;;1216:59;420:5267;;587:96:5;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:171:8:-;;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;84:94;;;;:::o;184:312::-;;317:2;305:9;296:7;292:23;288:32;285:2;;;333:1;330;323:12;285:2;376:1;401:78;471:7;462:6;451:9;447:22;401:78;:::i;:::-;391:88;;347:142;275:221;;;;:::o;502:96::-;;568:24;586:5;568:24;:::i;:::-;557:35;;547:51;;;:::o;604:110::-;;684:24;702:5;684:24;:::i;:::-;673:35;;663:51;;;:::o;720:126::-;;797:42;790:5;786:54;775:65;;765:81;;;:::o;852:150::-;939:38;971:5;939:38;:::i;:::-;932:5;929:49;919:2;;992:1;989;982:12;919:2;909:93;:::o;420:5267:7:-;;;;;;;",
  "deployedSourceMap": "420:5267:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:710;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4468:544;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5619:66;;;;;;;;;;;;;:::i;:::-;;1041:84:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5092:92:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605::0;;;;;;;;;;;;;:::i;:::-;;5458:62:7;;;;;;;;;;;;;:::i;:::-;;973:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2504:435:7;;;:::i;:::-;;3965:402;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1846:189:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5294:91:7;5340:4;5359:9;:21;5369:10;5359:21;;;;;;;;;;;;;;;;5352:28;;5294:91;:::o;3091:710::-;3164:22;1539;1515:8;:20;1524:10;1515:20;;;;;;;;;;;;;;;;:46;;1507:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3199:21:::1;3231:10;3199:43;;3369:22;3345:8;:20;3354:10;3345:20;;;;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;;;;;;;;3542:1;3518:9;:21;3528:10;3518:21;;;;;;;;;;;;;;;:25;;;;3624:5;:14;;:38;3639:22;3624:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3722:74;3739:10;3751:22;3775:8;:20;3784:10;3775:20;;;;;;;;;;;;;;;;3722:74;;;;;;;;:::i;:::-;;;;;;;;1590:1;3091:710:::0;;:::o;4468:544::-;4527:5;2370:15;2359:7;2340:9;:16;2350:5;2340:16;;;;;;;;;;;;;;;;:26;;;;:::i;:::-;2339:46;2331:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4727:1:::1;4699:7;;;;;;;;;;;:17;;;4717:5;4699:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;4691:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4855:7;;;;;;;;;;;:16;;;4872:5;4879:13;4855:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5006:1;4987:9;:16;4997:5;4987:16;;;;;;;;;;;;;;;:20;;;;4468:544:::0;;:::o;5619:66::-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5661:19:7::1;:17;:19::i;:::-;5619:66::o:0;1041:84:1:-;1088:4;1111:7;;;;;;;;;;;1104:14;;1041:84;:::o;5092:92:7:-;5140:4;5159:8;:20;5168:10;5159:20;;;;;;;;;;;;;;;;5152:27;;5092:92;:::o;1605::0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5458:62:7:-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5498:17:7::1;:15;:17::i;:::-;5458:62::o:0;973:85:0:-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;2504:435:7:-;2655:1;2630:9;:21;2640:10;2630:21;;;;;;;;;;;;;;;;:26;:55;;;;;2684:1;2660:8;:20;2669:10;2660:20;;;;;;;;;;;;;;;;:25;2630:55;2627:114;;;2719:15;2695:9;:21;2705:10;2695:21;;;;;;;;;;;;;;;:39;;;;2627:114;2836:9;2812:8;:20;2821:10;2812:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2898:36;2912:10;2924:9;2898:36;;;;;;;:::i;:::-;;;;;;;;2504:435::o;3965:402::-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4060:12:7::1;4075:10;4060:25;;4292:7;;;;;;;;;;;:20;;;4313:4;4327;4334:27;4292:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1255:1:0;3965:402:7::0;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:5:-;640:7;666:10;659:17;;587:96;:::o;2053:117:1:-;1620:8;:6;:8::i;:::-;1612:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2121:5:::1;2111:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2141:22;2150:12;:10;:12::i;:::-;2141:22;;;;;;:::i;:::-;;;;;;;;2053:117::o:0;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;1806:115:1:-;1355:8;:6;:8::i;:::-;1354:9;1346:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1875:4:::1;1865:7;;:14;;;;;;;;;;;;;;;;;;1894:20;1901:12;:10;:12::i;:::-;1894:20;;;;;;:::i;:::-;;;;;;;;1806:115::o:0;7:139:8:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:278::-;;973:2;961:9;952:7;948:23;944:32;941:2;;;989:1;986;979:12;941:2;1032:1;1057:61;1110:7;1101:6;1090:9;1086:22;1057:61;:::i;:::-;1047:71;;1003:125;931:204;;;;:::o;1141:262::-;;1249:2;1237:9;1228:7;1224:23;1220:32;1217:2;;;1265:1;1262;1255:12;1217:2;1308:1;1333:53;1378:7;1369:6;1358:9;1354:22;1333:53;:::i;:::-;1323:63;;1279:117;1207:196;;;;:::o;1409:284::-;;1528:2;1516:9;1507:7;1503:23;1499:32;1496:2;;;1544:1;1541;1534:12;1496:2;1587:1;1612:64;1668:7;1659:6;1648:9;1644:22;1612:64;:::i;:::-;1602:74;;1558:128;1486:207;;;;:::o;1699:118::-;1786:24;1804:5;1786:24;:::i;:::-;1781:3;1774:37;1764:53;;:::o;1823:109::-;1904:21;1919:5;1904:21;:::i;:::-;1899:3;1892:34;1882:50;;:::o;1938:189::-;2054:66;2114:5;2054:66;:::i;:::-;2049:3;2042:79;2032:95;;:::o;2133:318::-;;2296:67;2360:2;2355:3;2296:67;:::i;:::-;2289:74;;2393:22;2389:1;2384:3;2380:11;2373:43;2442:2;2437:3;2433:12;2426:19;;2279:172;;;:::o;2457:327::-;;2620:67;2684:2;2679:3;2620:67;:::i;:::-;2613:74;;2717:31;2713:1;2708:3;2704:11;2697:52;2775:2;2770:3;2766:12;2759:19;;2603:181;;;:::o;2790:370::-;;2953:67;3017:2;3012:3;2953:67;:::i;:::-;2946:74;;3050:34;3046:1;3041:3;3037:11;3030:55;3116:8;3111:2;3106:3;3102:12;3095:30;3151:2;3146:3;3142:12;3135:19;;2936:224;;;:::o;3166:316::-;;3329:67;3393:2;3388:3;3329:67;:::i;:::-;3322:74;;3426:20;3422:1;3417:3;3413:11;3406:41;3473:2;3468:3;3464:12;3457:19;;3312:170;;;:::o;3488:314::-;;3651:67;3715:2;3710:3;3651:67;:::i;:::-;3644:74;;3748:18;3744:1;3739:3;3735:11;3728:39;3793:2;3788:3;3784:12;3777:19;;3634:168;;;:::o;3808:330::-;;3971:67;4035:2;4030:3;3971:67;:::i;:::-;3964:74;;4068:34;4064:1;4059:3;4055:11;4048:55;4129:2;4124:3;4120:12;4113:19;;3954:184;;;:::o;4144:330::-;;4307:67;4371:2;4366:3;4307:67;:::i;:::-;4300:74;;4404:34;4400:1;4395:3;4391:11;4384:55;4465:2;4460:3;4456:12;4449:19;;4290:184;;;:::o;4480:118::-;4567:24;4585:5;4567:24;:::i;:::-;4562:3;4555:37;4545:53;;:::o;4604:222::-;;4735:2;4724:9;4720:18;4712:26;;4748:71;4816:1;4805:9;4801:17;4792:6;4748:71;:::i;:::-;4702:124;;;;:::o;4832:442::-;;5019:2;5008:9;5004:18;4996:26;;5032:71;5100:1;5089:9;5085:17;5076:6;5032:71;:::i;:::-;5113:72;5181:2;5170:9;5166:18;5157:6;5113:72;:::i;:::-;5195;5263:2;5252:9;5248:18;5239:6;5195:72;:::i;:::-;4986:288;;;;;;:::o;5280:390::-;;5468:2;5457:9;5453:18;5445:26;;5481:71;5549:1;5538:9;5534:17;5525:6;5481:71;:::i;:::-;5562:101;5659:2;5648:9;5644:18;5635:6;5562:101;:::i;:::-;5435:235;;;;;:::o;5676:332::-;;5835:2;5824:9;5820:18;5812:26;;5848:71;5916:1;5905:9;5901:17;5892:6;5848:71;:::i;:::-;5929:72;5997:2;5986:9;5982:18;5973:6;5929:72;:::i;:::-;5802:206;;;;;:::o;6014:442::-;;6201:2;6190:9;6186:18;6178:26;;6214:71;6282:1;6271:9;6267:17;6258:6;6214:71;:::i;:::-;6295:72;6363:2;6352:9;6348:18;6339:6;6295:72;:::i;:::-;6377;6445:2;6434:9;6430:18;6421:6;6377:72;:::i;:::-;6168:288;;;;;;:::o;6462:210::-;;6587:2;6576:9;6572:18;6564:26;;6600:65;6662:1;6651:9;6647:17;6638:6;6600:65;:::i;:::-;6554:118;;;;:::o;6678:419::-;;6882:2;6871:9;6867:18;6859:26;;6931:9;6925:4;6921:20;6917:1;6906:9;6902:17;6895:47;6959:131;7085:4;6959:131;:::i;:::-;6951:139;;6849:248;;;:::o;7103:419::-;;7307:2;7296:9;7292:18;7284:26;;7356:9;7350:4;7346:20;7342:1;7331:9;7327:17;7320:47;7384:131;7510:4;7384:131;:::i;:::-;7376:139;;7274:248;;;:::o;7528:419::-;;7732:2;7721:9;7717:18;7709:26;;7781:9;7775:4;7771:20;7767:1;7756:9;7752:17;7745:47;7809:131;7935:4;7809:131;:::i;:::-;7801:139;;7699:248;;;:::o;7953:419::-;;8157:2;8146:9;8142:18;8134:26;;8206:9;8200:4;8196:20;8192:1;8181:9;8177:17;8170:47;8234:131;8360:4;8234:131;:::i;:::-;8226:139;;8124:248;;;:::o;8378:419::-;;8582:2;8571:9;8567:18;8559:26;;8631:9;8625:4;8621:20;8617:1;8606:9;8602:17;8595:47;8659:131;8785:4;8659:131;:::i;:::-;8651:139;;8549:248;;;:::o;8803:419::-;;9007:2;8996:9;8992:18;8984:26;;9056:9;9050:4;9046:20;9042:1;9031:9;9027:17;9020:47;9084:131;9210:4;9084:131;:::i;:::-;9076:139;;8974:248;;;:::o;9228:419::-;;9432:2;9421:9;9417:18;9409:26;;9481:9;9475:4;9471:20;9467:1;9456:9;9452:17;9445:47;9509:131;9635:4;9509:131;:::i;:::-;9501:139;;9399:248;;;:::o;9653:222::-;;9784:2;9773:9;9769:18;9761:26;;9797:71;9865:1;9854:9;9850:17;9841:6;9797:71;:::i;:::-;9751:124;;;;:::o;9881:169::-;;9999:6;9994:3;9987:19;10039:4;10034:3;10030:14;10015:29;;9977:73;;;;:::o;10056:305::-;;10115:20;10133:1;10115:20;:::i;:::-;10110:25;;10149:20;10167:1;10149:20;:::i;:::-;10144:25;;10303:1;10235:66;10231:74;10228:1;10225:81;10222:2;;;10309:18;;:::i;:::-;10222:2;10353:1;10350;10346:9;10339:16;;10100:261;;;;:::o;10367:191::-;;10427:20;10445:1;10427:20;:::i;:::-;10422:25;;10461:20;10479:1;10461:20;:::i;:::-;10456:25;;10500:1;10497;10494:8;10491:2;;;10505:18;;:::i;:::-;10491:2;10550:1;10547;10543:9;10535:17;;10412:146;;;;:::o;10564:96::-;;10630:24;10648:5;10630:24;:::i;:::-;10619:35;;10609:51;;;:::o;10666:90::-;;10743:5;10736:13;10729:21;10718:32;;10708:48;;;:::o;10762:126::-;;10839:42;10832:5;10828:54;10817:65;;10807:81;;;:::o;10894:77::-;;10960:5;10949:16;;10939:32;;;:::o;10977:142::-;;11089:24;11107:5;11089:24;:::i;:::-;11076:37;;11066:53;;;:::o;11125:180::-;11173:77;11170:1;11163:88;11270:4;11267:1;11260:15;11294:4;11291:1;11284:15;11311:122;11384:24;11402:5;11384:24;:::i;:::-;11377:5;11374:35;11364:2;;11423:1;11420;11413:12;11364:2;11354:79;:::o;11439:116::-;11509:21;11524:5;11509:21;:::i;:::-;11502:5;11499:32;11489:2;;11545:1;11542;11535:12;11489:2;11479:76;:::o;11561:122::-;11634:24;11652:5;11634:24;:::i;:::-;11627:5;11624:35;11614:2;;11673:1;11670;11663:12;11614:2;11604:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n /**\n  /// @title Gringotts Bank Dapp\n  /// @author Dinah Johnson\n  /// @notice You can use this contract for basic DeFi simulations of deposits, withdrawals, and rewarding liquidity providers\n  */\ncontract Gringotts is Ownable, Pausable {\n  /// @dev refer to https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20\n  IERC20 private galleon;\n\n  mapping (address => uint) private balances;\n  mapping (address => uint) private timestamp;\n  \n  /// @notice You have made a deposit in the Gringotts Bank\n  event LogEthDeposit(address _accountAddress, uint _depositAmount);\n  \n  /// @notice You have made a withdrawal from the Gringotts Bank\n  event LogEthWithdrawal(address _accountAddress,uint _withdrawalAmount, uint _updatedBalance);\n\n  /**\n    @param _galleon the ERC20 token this contract will use\n    @notice After the Galleon contract is deployed the address of the Galleon contract is \n      passed to the constructor of this bank contract so the bank can use ERC20 tokens\n  */\n  constructor (IERC20 _galleon) {\n    galleon = _galleon;\n  }\n\n  /// @param _amountToWithdrawInWei the amount the user wants to withdraw in Wei\n  /// @notice User must have sufficient funds in their account balance to withdraw their Wei \n  modifier hasFunds(uint _amountToWithdrawInWei) {\n    require(balances[msg.sender] >= _amountToWithdrawInWei, \"Insufficient funds\");\n    _; \n  }\n\n  /// @param _user the user must have an account with a balance in the bank to receive Galleon token rewards\n  /// @param timestamp set to the block timestamp at the time of the user's initial deposit into the bank\n  /** @notice In production the requirement would be for a user to hold a deposit in the bank for >= 1 year:\n      For the purpose of testing this project, the user will receive Galleons for making an initial deposit \n      without the aforementioned time requirement. \n  */\n  modifier isHodler(address _user) {\n    /// @dev In production, uncomment line 55 (next line) and delete line 56 (next line + 1)\n      // require((timestamp[_user] + 365 days) >= block.timestamp, \"Hasn't held funds longer than 1 year\");\n    require((timestamp[_user] - 30 days) < block.timestamp, \"Hasn't held funds long enough\");\n    _;\n  }\n\n  /// @notice You have made a deposit to your Gringotts Bank account\n  function deposit() external payable {\n    /// @notice block timestamp is stored for each user on their initial deposit\n    if(timestamp[msg.sender] == 0 && balances[msg.sender] == 0) {\n      timestamp[msg.sender] = block.timestamp;\n    }\n\n    /// @notice updates user's wei balance in their bank account\n    balances[msg.sender] += msg.value;\n\n    /// @notice emits log of the deposit\n    emit LogEthDeposit(msg.sender, msg.value);\n  }\n\n  /// @param _amountToWithdrawInWei amount user wishes to withdraw in wei\n  /// @notice You have made a withdrawal from your Gringotts Bank account\n  function withdraw(uint _amountToWithdrawInWei) external payable hasFunds(_amountToWithdrawInWei) {\n    \n    address payable _user = payable(msg.sender);\n    \n    /// @notice withdrawal amount in wei deducted from user's balance in their bank account\n    balances[msg.sender] -= _amountToWithdrawInWei;\n    \n    /// @notice timestamp for tracking how long user has held a deposit without withdrawing liquidity is reset to 0\n    timestamp[msg.sender] = 0;\n\n    /// @notice withdrawal amount in wei is transferred to the user's EOA\n    _user.transfer(_amountToWithdrawInWei);\n    \n    /// @notice emits log of the withdrawal\n    emit LogEthWithdrawal(msg.sender, _amountToWithdrawInWei, balances[msg.sender]);\n  }\n\n  /// @param from the owner\n  /** @notice Allows only the owner of the ERC20 contract Galleon.sol to approve this\n      contract to spend Galleon tokens. \n  */\n  function transferGalleonsToContract(uint _amountToContractInGalleons) external onlyOwner {\n    address from = msg.sender;\n\n    /// @dev refer to https://forum.openzeppelin.com/t/example-on-how-to-use-erc20-token-in-another-contract/1682\n    /// @notice Transfers Galleon ERC20 token from the owner to this contract so bank\n    galleon.transferFrom(from, address(this), _amountToContractInGalleons);\n  }\n\n  /// @notice Rewards liquidity providers with Galleon tokens if they hold a deposit in the bank\n  function mintGalleonsToUser(address _user) public isHodler(_user) {\n    /**  @dev In production the isHodler requirement would add the requirement of holding a deposit \n          for 1 year to receive reward tokens */ \n    require(galleon.balanceOf(_user) == 0, \"User has already claimed rewards\");\n    \n    /// @notice allows the bank to transfer 1000 Galleons to an account holder\n    galleon.transfer(_user, 1000 * 10**18);\n\n    /// @notice timestamp for user is reset to 0 once rewards are claimed for the year\n    timestamp[_user] = 0;\n  }\n\n  /// @notice Get wei balance in user's account \n  /// @return returns uint\n  function getEthBalance() external view returns (uint) {\n    return balances[msg.sender];\n  }\n\n  /// @notice Get timestamp for how long user has provided liquidity to bank  \n  /// @return returns uint\n  function getTimestamp() external view returns(uint) {\n    return timestamp[msg.sender];\n  }\n\n  /// @notice Pause the contract \n  /// @dev Circuit breaker pattern\n  function pause() public onlyOwner {\n    Pausable._pause();\n  }\n\n  /// @notice Resume the contract for both reads and writes\n  /// @dev Circuit breaker pattern\n  function unpause() public onlyOwner {\n    Pausable._unpause();\n  }\n}",
  "sourcePath": "/Users/dinahj/Desktop/Consensys-Bootcamp/blockchain-developer-bootcamp-final-project/contracts/Gringotts.sol",
  "ast": {
    "absolutePath": "project:/contracts/Gringotts.sol",
    "exportedSymbols": {
      "Context": [
        866
      ],
      "ERC20": [
        741
      ],
      "Gringotts": [
        1212
      ],
      "IERC20": [
        819
      ],
      "IERC20Metadata": [
        844
      ],
      "Ownable": [
        103
      ],
      "Pausable": [
        195
      ]
    },
    "id": 1213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 925,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 926,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 104,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 927,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 196,
        "src": "110:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 928,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 742,
        "src": "166:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 930,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "442:7:7"
            },
            "id": 931,
            "nodeType": "InheritanceSpecifier",
            "src": "442:7:7"
          },
          {
            "baseName": {
              "id": 932,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 195,
              "src": "451:8:7"
            },
            "id": 933,
            "nodeType": "InheritanceSpecifier",
            "src": "451:8:7"
          }
        ],
        "contractDependencies": [
          103,
          195,
          866
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 929,
          "nodeType": "StructuredDocumentation",
          "src": "223:196:7",
          "text": "/// @title Gringotts Bank Dapp\n/// @author Dinah Johnson\n/// @notice You can use this contract for basic DeFi simulations of deposits, withdrawals, and rewarding liquidity providers"
        },
        "fullyImplemented": true,
        "id": 1212,
        "linearizedBaseContracts": [
          1212,
          195,
          103,
          866
        ],
        "name": "Gringotts",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 934,
              "nodeType": "StructuredDocumentation",
              "src": "464:84:7",
              "text": "@dev refer to https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20"
            },
            "id": 937,
            "mutability": "mutable",
            "name": "galleon",
            "nodeType": "VariableDeclaration",
            "scope": 1212,
            "src": "551:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$819",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 936,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 935,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 819,
                "src": "551:6:7"
              },
              "referencedDeclaration": 819,
              "src": "551:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$819",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 941,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 1212,
            "src": "578:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 940,
              "keyType": {
                "id": 938,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "587:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "578:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 939,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "598:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 945,
            "mutability": "mutable",
            "name": "timestamp",
            "nodeType": "VariableDeclaration",
            "scope": 1212,
            "src": "624:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 944,
              "keyType": {
                "id": 942,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "624:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 943,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "644:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 946,
              "nodeType": "StructuredDocumentation",
              "src": "674:57:7",
              "text": "@notice You have made a deposit in the Gringotts Bank"
            },
            "id": 952,
            "name": "LogEthDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "754:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "779:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:46:7"
            },
            "src": "734:66:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 953,
              "nodeType": "StructuredDocumentation",
              "src": "806:62:7",
              "text": "@notice You have made a withdrawal from the Gringotts Bank"
            },
            "id": 961,
            "name": "LogEthWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "894:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 957,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "918:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_updatedBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "942:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:70:7"
            },
            "src": "871:93:7"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "1246:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 968,
                      "name": "galleon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "1252:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$819",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 969,
                      "name": "_galleon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "1262:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$819",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1252:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$819",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:18:7"
                }
              ]
            },
            "documentation": {
              "id": 962,
              "nodeType": "StructuredDocumentation",
              "src": "968:245:7",
              "text": "@param _galleon the ERC20 token this contract will use\n@notice After the Galleon contract is deployed the address of the Galleon contract is \npassed to the constructor of this bank contract so the bank can use ERC20 tokens"
            },
            "id": 973,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "_galleon",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "1229:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$819",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 963,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 819,
                      "src": "1229:6:7"
                    },
                    "referencedDeclaration": 819,
                    "src": "1229:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$819",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:17:7"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:7"
            },
            "scope": 1212,
            "src": "1216:59:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 989,
              "nodeType": "Block",
              "src": "1501:96:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 979,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "1515:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 982,
                          "indexExpression": {
                            "expression": {
                              "id": 980,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1524:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1524:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1515:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 983,
                          "name": "_amountToWithdrawInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "1539:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1515:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1507:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:77:7"
                },
                {
                  "id": 988,
                  "nodeType": "PlaceholderStatement",
                  "src": "1590:1:7"
                }
              ]
            },
            "documentation": {
              "id": 974,
              "nodeType": "StructuredDocumentation",
              "src": "1279:172:7",
              "text": "@param _amountToWithdrawInWei the amount the user wants to withdraw in Wei\n @notice User must have sufficient funds in their account balance to withdraw their Wei "
            },
            "id": 990,
            "name": "hasFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "_amountToWithdrawInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "1472:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1471:29:7"
            },
            "src": "1454:143:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "2124:307:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 996,
                                  "name": "timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 945,
                                  "src": "2340:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 998,
                                "indexExpression": {
                                  "id": 997,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 993,
                                  "src": "2350:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2340:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "3330",
                                "id": 999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2359:7:7",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "30"
                              },
                              "src": "2340:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1001,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2339:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1002,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2370:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2370:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2339:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861736e27742068656c642066756e6473206c6f6e6720656e6f756768",
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2387:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5",
                          "typeString": "literal_string \"Hasn't held funds long enough\""
                        },
                        "value": "Hasn't held funds long enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5",
                          "typeString": "literal_string \"Hasn't held funds long enough\""
                        }
                      ],
                      "id": 995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2331:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:88:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:88:7"
                },
                {
                  "id": 1008,
                  "nodeType": "PlaceholderStatement",
                  "src": "2425:1:7"
                }
              ]
            },
            "documentation": {
              "id": 991,
              "nodeType": "StructuredDocumentation",
              "src": "1816:272:7",
              "text": "@notice In production the requirement would be for a user to hold a deposit in the bank for >= 1 year:\nFor the purpose of testing this project, the user will receive Galleons for making an initial deposit \nwithout the aforementioned time requirement. "
            },
            "id": 1010,
            "name": "isHodler",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "2109:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:15:7"
            },
            "src": "2091:340:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1052,
              "nodeType": "Block",
              "src": "2540:399:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1014,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "2630:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1017,
                        "indexExpression": {
                          "expression": {
                            "id": 1015,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2640:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2640:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2630:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2630:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1020,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "2660:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1023,
                        "indexExpression": {
                          "expression": {
                            "id": 1021,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2669:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2669:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2660:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2660:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2630:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1036,
                  "nodeType": "IfStatement",
                  "src": "2627:114:7",
                  "trueBody": {
                    "id": 1035,
                    "nodeType": "Block",
                    "src": "2687:54:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1027,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "2695:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1030,
                            "indexExpression": {
                              "expression": {
                                "id": 1028,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2705:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2705:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2695:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1031,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2719:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2719:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2695:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1034,
                        "nodeType": "ExpressionStatement",
                        "src": "2695:39:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1037,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "2812:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1040,
                      "indexExpression": {
                        "expression": {
                          "id": 1038,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2821:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2821:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2812:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2836:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2836:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2812:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:33:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1046,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2912:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2912:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1048,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2924:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2924:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1045,
                      "name": "LogEthDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "2898:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "EmitStatement",
                  "src": "2893:41:7"
                }
              ]
            },
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
              "src": "2435:66:7",
              "text": "@notice You have made a deposit to your Gringotts Bank account"
            },
            "functionSelector": "d0e30db0",
            "id": 1053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:7"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:7"
            },
            "scope": 1212,
            "src": "2504:435:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "3188:613:7",
              "statements": [
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "_user",
                      "nodeType": "VariableDeclaration",
                      "scope": 1100,
                      "src": "3199:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1062,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3199:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1066,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3231:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3231:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3223:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3223:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3199:43:7"
                },
                {
                  "expression": {
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1070,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "3345:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1073,
                      "indexExpression": {
                        "expression": {
                          "id": 1071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3354:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3354:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3345:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1074,
                      "name": "_amountToWithdrawInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "3369:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3345:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "3345:46:7"
                },
                {
                  "expression": {
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1077,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "3518:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1080,
                      "indexExpression": {
                        "expression": {
                          "id": 1078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3528:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3528:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3518:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3542:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3518:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:25:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1087,
                        "name": "_amountToWithdrawInWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "3639:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1084,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "3624:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3624:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "3624:38:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1091,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3739:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3739:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1093,
                        "name": "_amountToWithdrawInWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "3751:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1094,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "3775:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1097,
                        "indexExpression": {
                          "expression": {
                            "id": 1095,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3784:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3784:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3775:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1090,
                      "name": "LogEthWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "3722:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "EmitStatement",
                  "src": "3717:79:7"
                }
              ]
            },
            "documentation": {
              "id": 1054,
              "nodeType": "StructuredDocumentation",
              "src": "2943:145:7",
              "text": "@param _amountToWithdrawInWei amount user wishes to withdraw in wei\n @notice You have made a withdrawal from your Gringotts Bank account"
            },
            "functionSelector": "2e1a7d4d",
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1059,
                    "name": "_amountToWithdrawInWei",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1056,
                    "src": "3164:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1060,
                "modifierName": {
                  "id": 1058,
                  "name": "hasFunds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 990,
                  "src": "3155:8:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3155:32:7"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "_amountToWithdrawInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "3109:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:29:7"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:7"
            },
            "scope": 1212,
            "src": "3091:710:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1125,
              "nodeType": "Block",
              "src": "4054:313:7",
              "statements": [
                {
                  "assignments": [
                    1110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1110,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 1125,
                      "src": "4060:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1109,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4060:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1113,
                  "initialValue": {
                    "expression": {
                      "id": 1111,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "4075:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4075:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:25:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1117,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "4313:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4327:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Gringotts_$1212",
                              "typeString": "contract Gringotts"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Gringotts_$1212",
                              "typeString": "contract Gringotts"
                            }
                          ],
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4319:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4319:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4319:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1122,
                        "name": "_amountToContractInGalleons",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "4334:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1114,
                        "name": "galleon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "4292:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 800,
                      "src": "4292:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:70:7"
                }
              ]
            },
            "documentation": {
              "id": 1102,
              "nodeType": "StructuredDocumentation",
              "src": "3833:129:7",
              "text": "@notice Allows only the owner of the ERC20 contract Galleon.sol to approve this\ncontract to spend Galleon tokens. "
            },
            "functionSelector": "d22fe713",
            "id": 1126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1107,
                "modifierName": {
                  "id": 1106,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "4044:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4044:9:7"
              }
            ],
            "name": "transferGalleonsToContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "_amountToContractInGalleons",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "4001:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:34:7"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:0:7"
            },
            "scope": 1212,
            "src": "3965:402:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1162,
              "nodeType": "Block",
              "src": "4534:478:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1138,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "4717:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1136,
                              "name": "galleon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 937,
                              "src": "4699:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 758,
                            "src": "4699:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4699:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4727:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4699:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722068617320616c726561647920636c61696d65642072657761726473",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4730:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12",
                          "typeString": "literal_string \"User has already claimed rewards\""
                        },
                        "value": "User has already claimed rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12",
                          "typeString": "literal_string \"User has already claimed rewards\""
                        }
                      ],
                      "id": 1135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4691:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4691:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "4691:74:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1148,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "4872:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4879:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4886:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4890:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "4886:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "4879:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 1145,
                        "name": "galleon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "4855:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "4855:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:38:7"
                },
                {
                  "expression": {
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "4987:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1158,
                      "indexExpression": {
                        "id": 1157,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "4997:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4987:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5006:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4987:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:20:7"
                }
              ]
            },
            "documentation": {
              "id": 1127,
              "nodeType": "StructuredDocumentation",
              "src": "4371:94:7",
              "text": "@notice Rewards liquidity providers with Galleon tokens if they hold a deposit in the bank"
            },
            "functionSelector": "33fb3095",
            "id": 1163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1132,
                    "name": "_user",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1129,
                    "src": "4527:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1133,
                "modifierName": {
                  "id": 1131,
                  "name": "isHodler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1010,
                  "src": "4518:8:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4518:15:7"
              }
            ],
            "name": "mintGalleonsToUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "4496:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:15:7"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4534:0:7"
            },
            "scope": 1212,
            "src": "4468:544:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "5146:38:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1169,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 941,
                      "src": "5159:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1172,
                    "indexExpression": {
                      "expression": {
                        "id": 1170,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5168:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5168:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5159:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1168,
                  "id": 1173,
                  "nodeType": "Return",
                  "src": "5152:27:7"
                }
              ]
            },
            "documentation": {
              "id": 1164,
              "nodeType": "StructuredDocumentation",
              "src": "5016:73:7",
              "text": "@notice Get wei balance in user's account \n @return returns uint"
            },
            "functionSelector": "70ed0ada",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5114:2:7"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "5140:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5140:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5139:6:7"
            },
            "scope": 1212,
            "src": "5092:92:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "5346:39:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1181,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "5359:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1184,
                    "indexExpression": {
                      "expression": {
                        "id": 1182,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5369:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5369:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5359:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1180,
                  "id": 1185,
                  "nodeType": "Return",
                  "src": "5352:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1176,
              "nodeType": "StructuredDocumentation",
              "src": "5188:103:7",
              "text": "@notice Get timestamp for how long user has provided liquidity to bank  \n @return returns uint"
            },
            "functionSelector": "188ec356",
            "id": 1187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5315:2:7"
            },
            "returnParameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "5340:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:6:7"
            },
            "scope": 1212,
            "src": "5294:91:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1198,
              "nodeType": "Block",
              "src": "5492:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1193,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "5498:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$195_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 178,
                      "src": "5498:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5498:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:17:7"
                }
              ]
            },
            "documentation": {
              "id": 1188,
              "nodeType": "StructuredDocumentation",
              "src": "5389:66:7",
              "text": "@notice Pause the contract \n @dev Circuit breaker pattern"
            },
            "functionSelector": "8456cb59",
            "id": 1199,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1191,
                "modifierName": {
                  "id": 1190,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "5482:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5482:9:7"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5472:2:7"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5492:0:7"
            },
            "scope": 1212,
            "src": "5458:62:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "5655:30:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1205,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "5661:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$195_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 194,
                      "src": "5661:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5661:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "5661:19:7"
                }
              ]
            },
            "documentation": {
              "id": 1200,
              "nodeType": "StructuredDocumentation",
              "src": "5524:92:7",
              "text": "@notice Resume the contract for both reads and writes\n @dev Circuit breaker pattern"
            },
            "functionSelector": "3f4ba83a",
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1203,
                "modifierName": {
                  "id": 1202,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "5645:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5645:9:7"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5635:2:7"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5655:0:7"
            },
            "scope": 1212,
            "src": "5619:66:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1213,
        "src": "420:5267:7"
      }
    ],
    "src": "32:5655:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Gringotts.sol",
    "exportedSymbols": {
      "Context": [
        866
      ],
      "ERC20": [
        741
      ],
      "Gringotts": [
        1212
      ],
      "IERC20": [
        819
      ],
      "IERC20Metadata": [
        844
      ],
      "Ownable": [
        103
      ],
      "Pausable": [
        195
      ]
    },
    "id": 1213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 925,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 926,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 104,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 927,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 196,
        "src": "110:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 928,
        "nodeType": "ImportDirective",
        "scope": 1213,
        "sourceUnit": 742,
        "src": "166:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 930,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "442:7:7"
            },
            "id": 931,
            "nodeType": "InheritanceSpecifier",
            "src": "442:7:7"
          },
          {
            "baseName": {
              "id": 932,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 195,
              "src": "451:8:7"
            },
            "id": 933,
            "nodeType": "InheritanceSpecifier",
            "src": "451:8:7"
          }
        ],
        "contractDependencies": [
          103,
          195,
          866
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 929,
          "nodeType": "StructuredDocumentation",
          "src": "223:196:7",
          "text": "/// @title Gringotts Bank Dapp\n/// @author Dinah Johnson\n/// @notice You can use this contract for basic DeFi simulations of deposits, withdrawals, and rewarding liquidity providers"
        },
        "fullyImplemented": true,
        "id": 1212,
        "linearizedBaseContracts": [
          1212,
          195,
          103,
          866
        ],
        "name": "Gringotts",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 934,
              "nodeType": "StructuredDocumentation",
              "src": "464:84:7",
              "text": "@dev refer to https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20"
            },
            "id": 937,
            "mutability": "mutable",
            "name": "galleon",
            "nodeType": "VariableDeclaration",
            "scope": 1212,
            "src": "551:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$819",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 936,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 935,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 819,
                "src": "551:6:7"
              },
              "referencedDeclaration": 819,
              "src": "551:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$819",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 941,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 1212,
            "src": "578:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 940,
              "keyType": {
                "id": 938,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "587:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "578:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 939,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "598:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 945,
            "mutability": "mutable",
            "name": "timestamp",
            "nodeType": "VariableDeclaration",
            "scope": 1212,
            "src": "624:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 944,
              "keyType": {
                "id": 942,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "624:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 943,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "644:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 946,
              "nodeType": "StructuredDocumentation",
              "src": "674:57:7",
              "text": "@notice You have made a deposit in the Gringotts Bank"
            },
            "id": 952,
            "name": "LogEthDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "754:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_depositAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 952,
                  "src": "779:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:46:7"
            },
            "src": "734:66:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 953,
              "nodeType": "StructuredDocumentation",
              "src": "806:62:7",
              "text": "@notice You have made a withdrawal from the Gringotts Bank"
            },
            "id": 961,
            "name": "LogEthWithdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "894:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 957,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "918:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_updatedBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "942:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:70:7"
            },
            "src": "871:93:7"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "1246:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 968,
                      "name": "galleon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "1252:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$819",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 969,
                      "name": "_galleon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "1262:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$819",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1252:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$819",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:18:7"
                }
              ]
            },
            "documentation": {
              "id": 962,
              "nodeType": "StructuredDocumentation",
              "src": "968:245:7",
              "text": "@param _galleon the ERC20 token this contract will use\n@notice After the Galleon contract is deployed the address of the Galleon contract is \npassed to the constructor of this bank contract so the bank can use ERC20 tokens"
            },
            "id": 973,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "_galleon",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "1229:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$819",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 963,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 819,
                      "src": "1229:6:7"
                    },
                    "referencedDeclaration": 819,
                    "src": "1229:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$819",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:17:7"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:7"
            },
            "scope": 1212,
            "src": "1216:59:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 989,
              "nodeType": "Block",
              "src": "1501:96:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 979,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "1515:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 982,
                          "indexExpression": {
                            "expression": {
                              "id": 980,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1524:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1524:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1515:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 983,
                          "name": "_amountToWithdrawInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "1539:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1515:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1507:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:77:7"
                },
                {
                  "id": 988,
                  "nodeType": "PlaceholderStatement",
                  "src": "1590:1:7"
                }
              ]
            },
            "documentation": {
              "id": 974,
              "nodeType": "StructuredDocumentation",
              "src": "1279:172:7",
              "text": "@param _amountToWithdrawInWei the amount the user wants to withdraw in Wei\n @notice User must have sufficient funds in their account balance to withdraw their Wei "
            },
            "id": 990,
            "name": "hasFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "_amountToWithdrawInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "1472:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1471:29:7"
            },
            "src": "1454:143:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "2124:307:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 996,
                                  "name": "timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 945,
                                  "src": "2340:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 998,
                                "indexExpression": {
                                  "id": 997,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 993,
                                  "src": "2350:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2340:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "3330",
                                "id": 999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2359:7:7",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "30"
                              },
                              "src": "2340:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1001,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2339:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1002,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2370:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2370:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2339:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861736e27742068656c642066756e6473206c6f6e6720656e6f756768",
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2387:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5",
                          "typeString": "literal_string \"Hasn't held funds long enough\""
                        },
                        "value": "Hasn't held funds long enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f74546570ff69e8d85d660fed20232e7a028fb4fae92aaa503f41541ca483d5",
                          "typeString": "literal_string \"Hasn't held funds long enough\""
                        }
                      ],
                      "id": 995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2331:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:88:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:88:7"
                },
                {
                  "id": 1008,
                  "nodeType": "PlaceholderStatement",
                  "src": "2425:1:7"
                }
              ]
            },
            "documentation": {
              "id": 991,
              "nodeType": "StructuredDocumentation",
              "src": "1816:272:7",
              "text": "@notice In production the requirement would be for a user to hold a deposit in the bank for >= 1 year:\nFor the purpose of testing this project, the user will receive Galleons for making an initial deposit \nwithout the aforementioned time requirement. "
            },
            "id": 1010,
            "name": "isHodler",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 993,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "2109:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:15:7"
            },
            "src": "2091:340:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1052,
              "nodeType": "Block",
              "src": "2540:399:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1014,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "2630:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1017,
                        "indexExpression": {
                          "expression": {
                            "id": 1015,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2640:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2640:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2630:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2630:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1020,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "2660:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1023,
                        "indexExpression": {
                          "expression": {
                            "id": 1021,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2669:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2669:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2660:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2660:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2630:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1036,
                  "nodeType": "IfStatement",
                  "src": "2627:114:7",
                  "trueBody": {
                    "id": 1035,
                    "nodeType": "Block",
                    "src": "2687:54:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1027,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "2695:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1030,
                            "indexExpression": {
                              "expression": {
                                "id": 1028,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2705:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2705:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2695:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1031,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2719:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2719:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2695:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1034,
                        "nodeType": "ExpressionStatement",
                        "src": "2695:39:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1037,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "2812:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1040,
                      "indexExpression": {
                        "expression": {
                          "id": 1038,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2821:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2821:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2812:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2836:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2836:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2812:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:33:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1046,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2912:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2912:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1048,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2924:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2924:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1045,
                      "name": "LogEthDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "2898:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1051,
                  "nodeType": "EmitStatement",
                  "src": "2893:41:7"
                }
              ]
            },
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
              "src": "2435:66:7",
              "text": "@notice You have made a deposit to your Gringotts Bank account"
            },
            "functionSelector": "d0e30db0",
            "id": 1053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:7"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:7"
            },
            "scope": 1212,
            "src": "2504:435:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1100,
              "nodeType": "Block",
              "src": "3188:613:7",
              "statements": [
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "_user",
                      "nodeType": "VariableDeclaration",
                      "scope": 1100,
                      "src": "3199:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1062,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3199:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1066,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3231:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3231:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3223:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3223:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3199:43:7"
                },
                {
                  "expression": {
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1070,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 941,
                        "src": "3345:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1073,
                      "indexExpression": {
                        "expression": {
                          "id": 1071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3354:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3354:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3345:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1074,
                      "name": "_amountToWithdrawInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "3369:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3345:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "3345:46:7"
                },
                {
                  "expression": {
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1077,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "3518:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1080,
                      "indexExpression": {
                        "expression": {
                          "id": 1078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3528:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3528:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3518:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3542:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3518:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:25:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1087,
                        "name": "_amountToWithdrawInWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "3639:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1084,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "3624:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3624:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "3624:38:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1091,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3739:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3739:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1093,
                        "name": "_amountToWithdrawInWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "3751:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1094,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "3775:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1097,
                        "indexExpression": {
                          "expression": {
                            "id": 1095,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3784:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3784:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3775:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1090,
                      "name": "LogEthWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "3722:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "EmitStatement",
                  "src": "3717:79:7"
                }
              ]
            },
            "documentation": {
              "id": 1054,
              "nodeType": "StructuredDocumentation",
              "src": "2943:145:7",
              "text": "@param _amountToWithdrawInWei amount user wishes to withdraw in wei\n @notice You have made a withdrawal from your Gringotts Bank account"
            },
            "functionSelector": "2e1a7d4d",
            "id": 1101,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1059,
                    "name": "_amountToWithdrawInWei",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1056,
                    "src": "3164:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1060,
                "modifierName": {
                  "id": 1058,
                  "name": "hasFunds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 990,
                  "src": "3155:8:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3155:32:7"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "_amountToWithdrawInWei",
                  "nodeType": "VariableDeclaration",
                  "scope": 1101,
                  "src": "3109:27:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:29:7"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:7"
            },
            "scope": 1212,
            "src": "3091:710:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1125,
              "nodeType": "Block",
              "src": "4054:313:7",
              "statements": [
                {
                  "assignments": [
                    1110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1110,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 1125,
                      "src": "4060:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1109,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4060:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1113,
                  "initialValue": {
                    "expression": {
                      "id": 1111,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "4075:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4075:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:25:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1117,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "4313:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4327:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Gringotts_$1212",
                              "typeString": "contract Gringotts"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Gringotts_$1212",
                              "typeString": "contract Gringotts"
                            }
                          ],
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4319:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4319:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4319:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1122,
                        "name": "_amountToContractInGalleons",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "4334:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1114,
                        "name": "galleon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "4292:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 800,
                      "src": "4292:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:70:7"
                }
              ]
            },
            "documentation": {
              "id": 1102,
              "nodeType": "StructuredDocumentation",
              "src": "3833:129:7",
              "text": "@notice Allows only the owner of the ERC20 contract Galleon.sol to approve this\ncontract to spend Galleon tokens. "
            },
            "functionSelector": "d22fe713",
            "id": 1126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1107,
                "modifierName": {
                  "id": 1106,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "4044:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4044:9:7"
              }
            ],
            "name": "transferGalleonsToContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "_amountToContractInGalleons",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "4001:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:34:7"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:0:7"
            },
            "scope": 1212,
            "src": "3965:402:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1162,
              "nodeType": "Block",
              "src": "4534:478:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1138,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "4717:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1136,
                              "name": "galleon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 937,
                              "src": "4699:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$819",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 758,
                            "src": "4699:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4699:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4727:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4699:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722068617320616c726561647920636c61696d65642072657761726473",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4730:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12",
                          "typeString": "literal_string \"User has already claimed rewards\""
                        },
                        "value": "User has already claimed rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf0c80c4ee982d6b2d8ed1b66f489ccfde9b191abfa6e37e2eab9797f389ef12",
                          "typeString": "literal_string \"User has already claimed rewards\""
                        }
                      ],
                      "id": 1135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4691:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4691:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "4691:74:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1148,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "4872:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4879:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4886:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4890:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "4886:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "4879:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 1145,
                        "name": "galleon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "4855:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "4855:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:38:7"
                },
                {
                  "expression": {
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "4987:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1158,
                      "indexExpression": {
                        "id": 1157,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "4997:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4987:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5006:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4987:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:20:7"
                }
              ]
            },
            "documentation": {
              "id": 1127,
              "nodeType": "StructuredDocumentation",
              "src": "4371:94:7",
              "text": "@notice Rewards liquidity providers with Galleon tokens if they hold a deposit in the bank"
            },
            "functionSelector": "33fb3095",
            "id": 1163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1132,
                    "name": "_user",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1129,
                    "src": "4527:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1133,
                "modifierName": {
                  "id": 1131,
                  "name": "isHodler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1010,
                  "src": "4518:8:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4518:15:7"
              }
            ],
            "name": "mintGalleonsToUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "4496:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:15:7"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4534:0:7"
            },
            "scope": 1212,
            "src": "4468:544:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "5146:38:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1169,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 941,
                      "src": "5159:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1172,
                    "indexExpression": {
                      "expression": {
                        "id": 1170,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5168:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5168:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5159:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1168,
                  "id": 1173,
                  "nodeType": "Return",
                  "src": "5152:27:7"
                }
              ]
            },
            "documentation": {
              "id": 1164,
              "nodeType": "StructuredDocumentation",
              "src": "5016:73:7",
              "text": "@notice Get wei balance in user's account \n @return returns uint"
            },
            "functionSelector": "70ed0ada",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5114:2:7"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "5140:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5140:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5139:6:7"
            },
            "scope": 1212,
            "src": "5092:92:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "5346:39:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1181,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "5359:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1184,
                    "indexExpression": {
                      "expression": {
                        "id": 1182,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5369:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5369:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5359:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1180,
                  "id": 1185,
                  "nodeType": "Return",
                  "src": "5352:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1176,
              "nodeType": "StructuredDocumentation",
              "src": "5188:103:7",
              "text": "@notice Get timestamp for how long user has provided liquidity to bank  \n @return returns uint"
            },
            "functionSelector": "188ec356",
            "id": 1187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5315:2:7"
            },
            "returnParameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "5340:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:6:7"
            },
            "scope": 1212,
            "src": "5294:91:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1198,
              "nodeType": "Block",
              "src": "5492:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1193,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "5498:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$195_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 178,
                      "src": "5498:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5498:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:17:7"
                }
              ]
            },
            "documentation": {
              "id": 1188,
              "nodeType": "StructuredDocumentation",
              "src": "5389:66:7",
              "text": "@notice Pause the contract \n @dev Circuit breaker pattern"
            },
            "functionSelector": "8456cb59",
            "id": 1199,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1191,
                "modifierName": {
                  "id": 1190,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "5482:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5482:9:7"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5472:2:7"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5492:0:7"
            },
            "scope": 1212,
            "src": "5458:62:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "5655:30:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1205,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "5661:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$195_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 194,
                      "src": "5661:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5661:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "5661:19:7"
                }
              ]
            },
            "documentation": {
              "id": 1200,
              "nodeType": "StructuredDocumentation",
              "src": "5524:92:7",
              "text": "@notice Resume the contract for both reads and writes\n @dev Circuit breaker pattern"
            },
            "functionSelector": "3f4ba83a",
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1203,
                "modifierName": {
                  "id": 1202,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "5645:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5645:9:7"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5635:2:7"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5655:0:7"
            },
            "scope": 1212,
            "src": "5619:66:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1213,
        "src": "420:5267:7"
      }
    ],
    "src": "32:5655:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x1b851e1031ef35a238e6c67d0c7991162390df915f70eaf9098dbf0b175a6198": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_accountAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_depositAmount",
              "type": "uint256"
            }
          ],
          "name": "LogDeposit",
          "type": "event"
        },
        "0xf9226daf630542048a23086c6af599511aac100ec8f532793cc9697d061bed7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_accountAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_withdrawalAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_updatedBalance",
              "type": "uint256"
            }
          ],
          "name": "LogWithdrawal",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x9568868fa21e796ac8cf51e680200fcf972c9276898b5cf97e83298bf617fc77": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_accountAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_depositAmount",
              "type": "uint256"
            }
          ],
          "name": "LogEthDeposit",
          "type": "event"
        },
        "0xf4f955d21a0544a9d57a4f90e222e4b169ac9fffb73ccde4f24f3f5b30af6544": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_accountAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_withdrawalAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_updatedBalance",
              "type": "uint256"
            }
          ],
          "name": "LogEthWithdrawal",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB56509FC80e02b8f9f23311B10B294CB2745846A",
      "transactionHash": "0xb2ca8713c389b0b3885bd1f37ff0da07926328746cbfc6998f357356fea54c61"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-29T22:01:13.959Z",
  "devdoc": {
    "author": "Dinah Johnson",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_galleon": "the ERC20 token this contract will use"
        }
      },
      "getEthBalance()": {
        "returns": {
          "_0": "returns uint"
        }
      },
      "getTimestamp()": {
        "returns": {
          "_0": "returns uint"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Circuit breaker pattern"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Circuit breaker pattern"
      },
      "withdraw(uint256)": {
        "params": {
          "_amountToWithdrawInWei": "amount user wishes to withdraw in wei"
        }
      }
    },
    "stateVariables": {
      "galleon": {
        "details": "refer to https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20"
      }
    },
    "title": "Gringotts Bank Dapp",
    "version": 1
  },
  "userdoc": {
    "events": {
      "LogEthDeposit(address,uint256)": {
        "notice": "You have made a deposit in the Gringotts Bank"
      },
      "LogEthWithdrawal(address,uint256,uint256)": {
        "notice": "You have made a withdrawal from the Gringotts Bank"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "After the Galleon contract is deployed the address of the Galleon contract is  passed to the constructor of this bank contract so the bank can use ERC20 tokens"
      },
      "deposit()": {
        "notice": "You have made a deposit to your Gringotts Bank account"
      },
      "getEthBalance()": {
        "notice": "Get wei balance in user's account "
      },
      "getTimestamp()": {
        "notice": "Get timestamp for how long user has provided liquidity to bank  "
      },
      "mintGalleonsToUser(address)": {
        "notice": "Rewards liquidity providers with Galleon tokens if they hold a deposit in the bank"
      },
      "pause()": {
        "notice": "Pause the contract "
      },
      "transferGalleonsToContract(uint256)": {
        "notice": "Allows only the owner of the ERC20 contract Galleon.sol to approve this contract to spend Galleon tokens. "
      },
      "unpause()": {
        "notice": "Resume the contract for both reads and writes"
      },
      "withdraw(uint256)": {
        "notice": "You have made a withdrawal from your Gringotts Bank account"
      }
    },
    "notice": "You can use this contract for basic DeFi simulations of deposits, withdrawals, and rewarding liquidity providers",
    "version": 1
  }
}